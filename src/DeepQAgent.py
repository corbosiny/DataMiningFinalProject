import argparse, retro, threading, os

from Agent import Agent

class DeepQAgent(Agent):
    """ An agent that implements the Deep Q Neural Network Reinforcement Algorithm to learn.
    """

    def getMove(self, obs, info):
        """Returns a set of button inputs generated by the Agent's network after looking at the current observation

        Parameters
        ----------
        obs
            The observation of the current environment, 2D numpy array of pixel values

        info
            An array of information about the current environment, like player health, enemy health, matches won, and matches lost

        Returns
        -------
        move
            A set of button inputs in a multivariate array
        """
        return self.getRandomMove()

    def initializeNetwork(self):
        """To be implemented in child class, should initialize or load in the Agent's neural network"""
        raise NotImplementedError("Implement this is in the inherited agent")

    def prepareData(self):
        """To be implemented in child class, prepares the data stored in self.stepHistory in anyway needed for training, can just be pass if unecessary
            The data is stored in self.recordStep in the parent class and the formatting can be seen there.
        """
        raise NotImplementedError("Implement this is in the inherited agent")

    def getTrainTestSplit(self):
        """Splits the data into a train and test set
        Parameters
        ----------
        None

        Returns
        -------
            train_x, test_x, train_y, test_y which are all arrays of training points
        """
        raise NotImplementedError("Implement this is in the inherited agent")

    def trainNetwork(self, xTrain, xTest, yTrain, yTest):
        """To be implemented in child class, Runs through a training epoch reviewing the training data
        Parameters
        ----------
            train_x, test_x, train_y, test_y which are all areas of training points

        Returns
        -------
        None
        """
        raise NotImplementedError("Implement this is in the inherited agent")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Processes agent parameters.')
    parser.add_argument('-r', '--render', action= 'store_true', help= 'Boolean flag for if the user wants the game environment to render during play')
    args = parser.parse_args()
    qAgent = DeepQAgent(render= args.render)
    qAgent.train()
